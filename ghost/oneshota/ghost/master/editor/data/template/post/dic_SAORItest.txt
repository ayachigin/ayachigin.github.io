SAORIのサンプル

里々にはssu.dllというSAORIがセットでついています。
使わなくても特に困りませんが、色々おもしろいことも出来ます。
・iflist
・nswitch
・choice
・split
・substr
ついでに、里々の処理であるwhenの説明もここにあります。
各種サンプルトークに使い方の説明がコメントで書いてあります。

＊SAORI処理テスト
：\_qssu.dllっていうSAORIを使う処理のテストだよ。
whenだけSAORIじゃないけど説明の都合でここ。
辞書見ながら試してみてね。\_q
＿◯２分岐　when
＿◯リスト分岐　iflist
＿◯リスト分岐　nswitch
＿◯単純分岐　choice
＿◯文字列分割　split
＿◯文字取り出し　substr
＿◯メインメニューに戻る	メインメニュー

＊◯２分岐　when
＄一時変数	（乱数０〜３）
：今日の日記。
たこが（一時変数）匹釣れました。今日は（when,（一時変数）＞１,大漁,普通）です。
：（when,（一時変数）＝＝０,普通ってそれ、釣れてませんよ。）
：
＿◯処理テストに戻る	SAORI処理テスト
＿◯メインメニューに戻る	メインメニュー

＃（when,（条件式）,（条件を満たす場合の内容）,（条件を満たさない場合の内容））
＃（条件を満たさない場合の内容）は省略することも出来ます。
＃「＄一時変数」にランダムで０、１、２、３のどれかを格納します。
＃その後、「＄一時変数」の値によってトークを分岐させています。
＊◯リスト分岐　iflist
：（現在時）時だね。
（iflist、（現在時）、
＜６、こんばんは。、
＜１１、おはようございます。、
＜１８、こんにちは。、
＜２４、こんばんは。
）

＿◯処理テストに戻る	SAORI処理テスト
＿◯メインメニューに戻る	メインメニュー

＃（iflist,（変数など）,（条件１）,（内容１）,（条件２）,（内容２）...）
＃サンプルのように、括弧の中で改行した場合は、トークに改行は出てきません。
＃（変数など）と（条件１）は単純にくっついて考慮されます。例えば以下の書き方もOKです。
＃（iflist、（現在時）＜、６、こんばんは、１１、おはよう、１８、こんにちは、２４、こんばんは）

＃iflistの中では、括弧が上から順番に全部実行されるので気をつけてください。
＃例えば、以下では（明日の天気）は必ず「雨」になってしまいます。
＃＊◯リスト分岐　iflist
＃＄一時変数	（乱数０〜２）
＃：明日の天気はー。
＃（iflist、（一時変数）、
＃＝＝０、晴れるかも！（set,明日の天気,晴れ）、
＃＝＝１、曇りじゃないかな。（set,明日の天気,曇り）、
＃＝＝２、雨だー……。（set,明日の天気,雨）
＃）
＃：明日は、（明日の天気）ですか。

＊◯リスト分岐　nswitch
：今月は（nswitch,（現在月）,
お正月,
バレンタインデー,
ひなまつり,
エイプリルフール,
こどもの日,
梅雨,
海の日,
お盆,
敬老の日,
体育の日,
文化の日,
クリスマス
）があるね。

＿◯処理テストに戻る	SAORI処理テスト
＿◯メインメニューに戻る	メインメニュー

＃（nswitch,（１以上の値）,（１の場合の内容）,（２の場合の内容）...）
＃サンプルのように、かならず１から始まり抜けがないようなものに使います。
＃応用例としては、以下があります。
＃＠今の季節
＃（nswitch,（現在月）,冬,冬,春,春,春,夏,夏,夏,秋,秋,秋,冬）
＃上記の２行を辞書のどこかに書いておき、トークで（今の季節）と書けば、自動的に今の季節に置き換わります。

＃中の括弧は全て展開されます。「◯リスト分岐　iflist」のコメントも確認してください。
＊◯単純分岐　choice
：「晴れ」「雨」「くもり」の中からランダムに１つ選ぶよ。
「（choice,晴れ,雨,くもり）」

＿◯処理テストに戻る	SAORI処理テスト
＿◯メインメニューに戻る	メインメニュー

＃（choice,内容１,内容２...）
＃トーク内のちょっとした揺らぎなどに使うと便利です。
＃中身が空だと、空欄も候補になります。
＃以下のようにすると、空欄も候補になっているため、形容詞がランダムにつきます。
＃＊
＃：必殺！　（choice,超,）（choice,ウルトラ,）（choice,ハイパー,）（choice,スペシャル,）ただのパンチ！

＃中の括弧は全て展開されます。「◯リスト分岐　iflist」のコメントも確認してください。
＊◯文字列分割　split
＄一時変数	（すぷりっと対象）
：「（一時変数）」を「｜」区切りで「３つ」に分割して取り出すよ。
まずは分割するよ。（split,（一時変数）,｜,３）つに分割。
１つ目「（Ｓ０）」２つ目「（Ｓ１）」３つ目「（Ｓ２）」っ。
（nop,（split,どうかな））（Ｓ０）、（Ｓ１）、（Ｓ２）、（Ｓ３）？

＿◯処理テストに戻る	SAORI処理テスト
＿◯メインメニューに戻る	メインメニュー

＃（split,（対象の文字）,（分割する１文字）,（分割数））
＃splitを行うと、分割数だけが表示されます。
＃nopは、なにもしない処理です。今回のように、表示したくないものがある場合に使います。
＃分割数を指定すると、それ以降は分割されません。
＃（split,（対象の文字）,（分割する１文字））と分割数を省略すると分割数無制限になります。
＃（split,（文字列））とすると、1文字ずつ分割されます。

＃分割内容は、（Ｓ０）〜に入っています。
＃次にSAORIを使用すると削除されます。
＠すぷりっと対象
あか｜あお｜きいろ｜みどり
いぬ｜ねこ｜とり｜さかな
うどん｜そば｜そうめん｜ラーメン

＊◯文字取り出し　substr
＄一時変数	（さぶすとら対象）
＄取り出し位置	（乱数０〜５）
＄取り出し数	（乱数１〜５）
：「（一時変数）」の位置（取り出し位置）から（取り出し数）文字取り出すよー。
「（substr,（一時変数）,（取り出し位置）,（取り出し数））」っ。
＄取り出し位置	−（乱数１〜５）
＄取り出し数	−（乱数１〜５）
「（一時変数）」の位置（取り出し位置）から（取り出し数）だけ取り出すよー。
「（substr,（一時変数）,（取り出し位置）,（取り出し数））」っ。
どうかな？

＿◯処理テストに戻る	SAORI処理テスト
＿◯メインメニューに戻る	メインメニュー

＃（substr,（文字列）,（取り出し位置）,（取り出し数））
＃substrを行うと、文字列から文字を取り出せます。
＃取り出し位置をマイナスにすると、後ろから何文字目かという指定になります。
＃取り出し数をマイナスにすると、取り出し位置の前の文字を取り出します。
＃
＠さぶすとら対象
さとりすとのテンプレート
Rポストと狛犬は里々ゴースト
